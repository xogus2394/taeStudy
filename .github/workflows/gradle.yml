# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:    # 어떤 조건에서 workflow를 실행할지 컨디션을 적어준다
  push:
    branches: [ "main" ]  # 메인 브랜치에 push 될 때마다 깃허브 액션 동작
  pull_request:
    branches: [ "main" ]  # 메인 브랜치에서 PR 발생 시 깃허브 액션 동작
    
  workflow_dispatch:    # 해당 옵션을 통해 사용자가 직접 Actions 탭에서 workflow를 실행시킬 수 있다.

permissions:
  contents: read

# 해당 워크플로우의 하나 이상의 job 목록
jobs:
  build:  # build라는 이름으로 job 표시
    runs-on: ubuntu-latest  # CI 서버 runner가 어떤 환경을 갖출 것인가?

    steps:
    # uses 키워드를 통해 Action을 불러올 수 있다.
    # 해당 레포지토리로 체크아웃하여 레포지토리에 접근할 수 있는 action을 불러온다.
    - uses: actions/checkout@v2   # 깃허브 액션과 연결된 레포지토리의 코드를 runner로 옮기는 것
    
    - name: Set up JDK 11    # JDK 11 버전으로 작성된 프로젝트이기 때문에 이에 맞춰 setup
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        
    - name: Test with Gradle
      run: ./gradlew test
